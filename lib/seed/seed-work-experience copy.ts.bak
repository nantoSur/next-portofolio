import dotenv from "dotenv";
dotenv.config();

import postgres from "postgres";

console.log("üîç POSTGRES_URL =", process.env.POSTGRES_URL);

const sql = postgres(process.env.POSTGRES_URL!, { ssl: "require" });


type Skill = {
  id: string;
  name: string;
};

async function seedWorkexperience() {
  try {
    // ‚úÖ Cek koneksi
    const result = await sql`SELECT NOW()`;
    console.log("‚úÖ DB time:", result);

    // ‚úÖ Aktifkan ekstensi UUID (jika belum)
    await sql`CREATE EXTENSION IF NOT EXISTS "uuid-ossp";`;

    // ‚úÖ Buat table skills
    await sql`
      CREATE TABLE IF NOT EXISTS skills (
        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
        name TEXT NOT NULL UNIQUE,
        created_at TIMESTAMP DEFAULT NOW(),
        updated_at TIMESTAMP DEFAULT NOW()
      );
    `;

    // ‚úÖ Buat table work_experiences
    await sql`
      CREATE TABLE IF NOT EXISTS work_experiences (
        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
        role TEXT NOT NULL,
        company TEXT NOT NULL,
        location TEXT,
        logo_url TEXT,
        start_date DATE,
        end_date DATE,
        summary TEXT[] DEFAULT ARRAY[]::TEXT[],
        achievements TEXT[] DEFAULT ARRAY[]::TEXT[],
        created_at TIMESTAMP DEFAULT NOW(),
        updated_at TIMESTAMP DEFAULT NOW()
      );
    `;

    // ‚úÖ Pivot table work_experience_skills
    await sql`
      CREATE TABLE IF NOT EXISTS work_experience_skills (
        work_experience_id UUID REFERENCES work_experiences(id) ON DELETE CASCADE,
        skill_id UUID REFERENCES skills(id) ON DELETE CASCADE,
        PRIMARY KEY (work_experience_id, skill_id)
      );
    `;

    console.log("‚úÖ Semua tabel berhasil dibuat");

    // üå± Dummy skill
    const skillNames = [
      "VoIP",
      "FreePBX",
      "Proxmox",
      "React",
      "Next.js",
      "Typescript",
    ];

    for (const name of skillNames) {
      await sql`
        INSERT INTO skills (name)
        VALUES (${name})
        ON CONFLICT (name) DO NOTHING;
      `;
    }

    console.log("‚úÖ Data skills berhasil disisipkan");

    // üå± Dummy: work experience
    const insertedWorkExp = await sql`
      INSERT INTO work_experiences (
        role, company, location, logo_url,
        start_date, end_date, summary, achievements
      )
      VALUES
        (
          'VoIP Engineer',
          'Telkom Indonesia',
          'Bandung, Indonesia',
          'https://yourproject.supabase.co/storage/v1/object/public/logos/telkom-logo.png',
          '2021-01-01',
          NULL,
          ARRAY[
            'Manage PBX system (Yeastar, FreePBX)',
            'Setup and maintain Proxmox VMs for VoIP infrastructure'
          ],
          ARRAY[
            'Reduced call drop rate by 30%',
            'Migrated 20+ on-prem systems to cloud'
          ]
        ),
        (
          'Fullstack Developer',
          'Dicoding Indonesia',
          'Remote',
          'https://yourproject.supabase.co/storage/v1/object/public/logos/dicoding-logo.png',
          '2020-06-01',
          '2021-12-31',
          ARRAY[
            'Develop internal dashboard with Next.js and TailwindCSS',
            'Build backend API using Express and PostgreSQL'
          ],
          ARRAY[
            'Increased team productivity by 25%',
            'Refactored legacy codebase'
          ]
        ),
        (
          'Intern Network Engineer',
          'Biznet Networks',
          'Jakarta, Indonesia',
          'https://yourproject.supabase.co/storage/v1/object/public/logos/biznet-logo.png',
          '2019-01-01',
          '2019-06-30',
          ARRAY[
            'Monitor VoIP traffic and assist in PBX maintenance',
            'Setup VLAN and network routing'
          ],
          ARRAY[
            'Completed internship with excellence certificate',
            'Reduced packet loss by 10% during peak hours'
          ]
        )
      RETURNING id, role;
    `;

    const workExperienceIds = insertedWorkExp.map((item: any) => ({
      id: item.id,
      role: item.role,
    }));
    console.log("‚úÖ 3 data work_experiences berhasil disisipkan");

    // üå± Relasi work experience -> skills
    const skillMap: Record<string, string[]> = {
      "VoIP Engineer": ["VoIP", "FreePBX", "Proxmox"],
      "Fullstack Developer": ["React", "Next.js", "Typescript"],
      "Intern Network Engineer": ["VoIP", "Proxmox"],
    };

    const skillsInDb = await sql`SELECT id, name FROM skills`;

    for (const { id, role } of workExperienceIds) {
      const skillNames = skillMap[role];
      const matchedSkills = skillsInDb.filter((s: any) =>
        skillNames.includes(s.name)
      );

      for (const skill of matchedSkills) {
        await sql`
          INSERT INTO work_experience_skills (work_experience_id, skill_id)
          VALUES (${id}, ${skill.id})
          ON CONFLICT DO NOTHING;
        `;
      }
    }

    console.log("‚úÖ Relasi work_experience <-> skills berhasil disisipkan");

    process.exit(0);
  } catch (error) {
    console.error("‚ùå Gagal seeding:", error);
    process.exit(1);
  }
}

seedWorkexperience();
